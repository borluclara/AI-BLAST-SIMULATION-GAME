{"ast":null,"code":"class Particle {\n  constructor(options = {}) {\n    this.x = options.x || 0;\n    this.y = options.y || 0;\n    this.vx = options.vx || 0;\n    this.vy = options.vy || 0;\n    this.size = options.size || 2;\n    this.color = options.color || '#ffffff';\n    this.life = options.life || 100;\n    this.maxLife = this.life;\n    this.type = options.type || 'default';\n    this.mass = options.mass || 1;\n    this.bounciness = options.bounciness || 0.7;\n  }\n  update(deltaTime, gravity = 0, friction = 1) {\n    // Apply gravity\n    if (this.type === 'explosion') {\n      this.vy += gravity * deltaTime;\n    }\n\n    // Apply friction\n    this.vx *= friction;\n    this.vy *= friction;\n\n    // Update position\n    this.x += this.vx * deltaTime;\n    this.y += this.vy * deltaTime;\n\n    // Decrease life\n    this.life -= deltaTime;\n  }\n  render(ctx) {\n    const alpha = Math.max(0, this.life / this.maxLife);\n    ctx.save();\n    ctx.globalAlpha = alpha;\n\n    // Create gradient for particle\n    const gradient = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.size);\n    if (this.type === 'explosion') {\n      gradient.addColorStop(0, this.color);\n      gradient.addColorStop(1, 'rgba(255, 100, 0, 0)');\n    } else {\n      gradient.addColorStop(0, this.color);\n      gradient.addColorStop(1, 'rgba(100, 150, 255, 0)');\n    }\n    ctx.fillStyle = gradient;\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Add glow effect for explosion particles\n    if (this.type === 'explosion' && alpha > 0.5) {\n      ctx.shadowColor = this.color;\n      ctx.shadowBlur = this.size * 2;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size * 0.5, 0, Math.PI * 2);\n      ctx.fill();\n    }\n    ctx.restore();\n  }\n  isDead() {\n    return this.life <= 0;\n  }\n}\nexport default Particle;","map":{"version":3,"names":["Particle","constructor","options","x","y","vx","vy","size","color","life","maxLife","type","mass","bounciness","update","deltaTime","gravity","friction","render","ctx","alpha","Math","max","save","globalAlpha","gradient","createRadialGradient","addColorStop","fillStyle","beginPath","arc","PI","fill","shadowColor","shadowBlur","restore","isDead"],"sources":["C:/Users/THEO COMPUTERS/Desktop/AI-BLAST-SIMULATION-GAME/src/engine/Particle.js"],"sourcesContent":["class Particle {\r\n  constructor(options = {}) {\r\n    this.x = options.x || 0;\r\n    this.y = options.y || 0;\r\n    this.vx = options.vx || 0;\r\n    this.vy = options.vy || 0;\r\n    this.size = options.size || 2;\r\n    this.color = options.color || '#ffffff';\r\n    this.life = options.life || 100;\r\n    this.maxLife = this.life;\r\n    this.type = options.type || 'default';\r\n    this.mass = options.mass || 1;\r\n    this.bounciness = options.bounciness || 0.7;\r\n  }\r\n\r\n  update(deltaTime, gravity = 0, friction = 1) {\r\n    // Apply gravity\r\n    if (this.type === 'explosion') {\r\n      this.vy += gravity * deltaTime;\r\n    }\r\n\r\n    // Apply friction\r\n    this.vx *= friction;\r\n    this.vy *= friction;\r\n\r\n    // Update position\r\n    this.x += this.vx * deltaTime;\r\n    this.y += this.vy * deltaTime;\r\n\r\n    // Decrease life\r\n    this.life -= deltaTime;\r\n  }\r\n\r\n  render(ctx) {\r\n    const alpha = Math.max(0, this.life / this.maxLife);\r\n    \r\n    ctx.save();\r\n    ctx.globalAlpha = alpha;\r\n    \r\n    // Create gradient for particle\r\n    const gradient = ctx.createRadialGradient(\r\n      this.x, this.y, 0,\r\n      this.x, this.y, this.size\r\n    );\r\n    \r\n    if (this.type === 'explosion') {\r\n      gradient.addColorStop(0, this.color);\r\n      gradient.addColorStop(1, 'rgba(255, 100, 0, 0)');\r\n    } else {\r\n      gradient.addColorStop(0, this.color);\r\n      gradient.addColorStop(1, 'rgba(100, 150, 255, 0)');\r\n    }\r\n    \r\n    ctx.fillStyle = gradient;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    \r\n    // Add glow effect for explosion particles\r\n    if (this.type === 'explosion' && alpha > 0.5) {\r\n      ctx.shadowColor = this.color;\r\n      ctx.shadowBlur = this.size * 2;\r\n      ctx.beginPath();\r\n      ctx.arc(this.x, this.y, this.size * 0.5, 0, Math.PI * 2);\r\n      ctx.fill();\r\n    }\r\n    \r\n    ctx.restore();\r\n  }\r\n\r\n  isDead() {\r\n    return this.life <= 0;\r\n  }\r\n}\r\n\r\nexport default Particle;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}