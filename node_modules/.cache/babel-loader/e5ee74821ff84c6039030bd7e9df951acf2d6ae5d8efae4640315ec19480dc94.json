{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\THEO COMPUTERS\\\\Desktop\\\\AI-BLAST-SIMULATION-GAME\\\\src\\\\components\\\\Game\\\\GameCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport GameEngine from '../../engine/GameEngine';\nimport './GameCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const gameEngineRef = useRef(null);\n  const [isRunning, setIsRunning] = useState(false);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Initialize game engine\n    gameEngineRef.current = new GameEngine(canvas);\n\n    // Set canvas size\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth * 0.7;\n      canvas.height = window.innerHeight * 0.8;\n      if (gameEngineRef.current) {\n        gameEngineRef.current.resize(canvas.width, canvas.height);\n      }\n    };\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    // Mouse click handler for creating explosions\n    const handleCanvasClick = event => {\n      const rect = canvas.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n      if (gameEngineRef.current) {\n        gameEngineRef.current.createExplosion(x, y);\n      }\n    };\n    canvas.addEventListener('click', handleCanvasClick);\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      canvas.removeEventListener('click', handleCanvasClick);\n      if (gameEngineRef.current) {\n        gameEngineRef.current.stop();\n      }\n    };\n  }, []);\n  const toggleSimulation = () => {\n    if (gameEngineRef.current) {\n      if (isRunning) {\n        gameEngineRef.current.stop();\n      } else {\n        gameEngineRef.current.start();\n      }\n      setIsRunning(!isRunning);\n    }\n  };\n  const resetSimulation = () => {\n    if (gameEngineRef.current) {\n      gameEngineRef.current.reset();\n      setIsRunning(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-canvas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleSimulation,\n        className: \"control-btn\",\n        children: [isRunning ? 'Pause' : 'Start', \" Simulation\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetSimulation,\n        className: \"control-btn\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"instructions\",\n        children: \"Click on the canvas to create explosions!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"game-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"nfZD+lR01l7DE8Zcdf/7UR7OWvQ=\");\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","GameEngine","jsxDEV","_jsxDEV","GameCanvas","_s","canvasRef","gameEngineRef","isRunning","setIsRunning","canvas","current","resizeCanvas","width","window","innerWidth","height","innerHeight","resize","addEventListener","handleCanvasClick","event","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","createExplosion","removeEventListener","stop","toggleSimulation","start","resetSimulation","reset","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/THEO COMPUTERS/Desktop/AI-BLAST-SIMULATION-GAME/src/components/Game/GameCanvas.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport GameEngine from '../../engine/GameEngine';\r\nimport './GameCanvas.css';\r\n\r\nconst GameCanvas = () => {\r\n  const canvasRef = useRef(null);\r\n  const gameEngineRef = useRef(null);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    // Initialize game engine\r\n    gameEngineRef.current = new GameEngine(canvas);\r\n    \r\n    // Set canvas size\r\n    const resizeCanvas = () => {\r\n      canvas.width = window.innerWidth * 0.7;\r\n      canvas.height = window.innerHeight * 0.8;\r\n      if (gameEngineRef.current) {\r\n        gameEngineRef.current.resize(canvas.width, canvas.height);\r\n      }\r\n    };\r\n\r\n    resizeCanvas();\r\n    window.addEventListener('resize', resizeCanvas);\r\n\r\n    // Mouse click handler for creating explosions\r\n    const handleCanvasClick = (event) => {\r\n      const rect = canvas.getBoundingClientRect();\r\n      const x = event.clientX - rect.left;\r\n      const y = event.clientY - rect.top;\r\n      \r\n      if (gameEngineRef.current) {\r\n        gameEngineRef.current.createExplosion(x, y);\r\n      }\r\n    };\r\n\r\n    canvas.addEventListener('click', handleCanvasClick);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', resizeCanvas);\r\n      canvas.removeEventListener('click', handleCanvasClick);\r\n      if (gameEngineRef.current) {\r\n        gameEngineRef.current.stop();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const toggleSimulation = () => {\r\n    if (gameEngineRef.current) {\r\n      if (isRunning) {\r\n        gameEngineRef.current.stop();\r\n      } else {\r\n        gameEngineRef.current.start();\r\n      }\r\n      setIsRunning(!isRunning);\r\n    }\r\n  };\r\n\r\n  const resetSimulation = () => {\r\n    if (gameEngineRef.current) {\r\n      gameEngineRef.current.reset();\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-canvas-container\">\r\n      <div className=\"canvas-controls\">\r\n        <button onClick={toggleSimulation} className=\"control-btn\">\r\n          {isRunning ? 'Pause' : 'Start'} Simulation\r\n        </button>\r\n        <button onClick={resetSimulation} className=\"control-btn\">\r\n          Reset\r\n        </button>\r\n        <span className=\"instructions\">\r\n          Click on the canvas to create explosions!\r\n        </span>\r\n      </div>\r\n      <canvas\r\n        ref={canvasRef}\r\n        className=\"game-canvas\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameCanvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}